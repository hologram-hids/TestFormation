//go:cgo_ldflag "-O2"
//go:cgo_ldflag "-g"
//go:cgo_ldflag "-ldl"
// Code generated by cmd/cgo; DO NOT EDIT.

package openssl

import "unsafe"

import "syscall"

import _cgopackage "runtime/cgo"

type _ _cgopackage.Incomplete
var _ syscall.Errno
func _Cgo_ptr(ptr unsafe.Pointer) unsafe.Pointer { return ptr }

//go:linkname _Cgo_always_false runtime.cgoAlwaysFalse
var _Cgo_always_false bool
//go:linkname _Cgo_use runtime.cgoUse
func _Cgo_use(interface{})
type _Ctype_ASN1_BIT_STRING = _Ctype_struct_asn1_string_st

type _Ctype_ASN1_BMPSTRING = _Ctype_struct_asn1_string_st

type _Ctype_ASN1_BOOLEAN = _Ctype_int

type _Ctype_ASN1_ENUMERATED = _Ctype_struct_asn1_string_st

type _Ctype_ASN1_GENERALIZEDTIME = _Ctype_struct_asn1_string_st

type _Ctype_ASN1_GENERALSTRING = _Ctype_struct_asn1_string_st

type _Ctype_ASN1_IA5STRING = _Ctype_struct_asn1_string_st

type _Ctype_ASN1_INTEGER = _Ctype_struct_asn1_string_st

type _Ctype_ASN1_OBJECT = _Ctype_struct_asn1_object_st

type _Ctype_ASN1_OCTET_STRING = _Ctype_struct_asn1_string_st

type _Ctype_ASN1_PRINTABLESTRING = _Ctype_struct_asn1_string_st

type _Ctype_ASN1_STRING = _Ctype_struct_asn1_string_st

type _Ctype_ASN1_T61STRING = _Ctype_struct_asn1_string_st

type _Ctype_ASN1_TYPE = _Ctype_struct_asn1_type_st

type _Ctype_ASN1_UNIVERSALSTRING = _Ctype_struct_asn1_string_st

type _Ctype_ASN1_UTCTIME = _Ctype_struct_asn1_string_st

type _Ctype_ASN1_UTF8STRING = _Ctype_struct_asn1_string_st

type _Ctype_ASN1_VALUE = _Ctype_struct_ASN1_VALUE_st

type _Ctype_ASN1_VISIBLESTRING = _Ctype_struct_asn1_string_st

type _Ctype_BIGNUM = _Ctype_struct_bignum_st

type _Ctype_BN_BLINDING = _Ctype_struct_bn_blinding_st

type _Ctype_BN_CTX = _Ctype_struct_bignum_ctx

type _Ctype_BN_GENCB = _Ctype_struct_bn_gencb_st

type _Ctype_BN_MONT_CTX = _Ctype_struct_bn_mont_ctx_st

type _Ctype_CRYPTO_EX_DATA = _Ctype_struct_crypto_ex_data_st

type _Ctype_DH = _Ctype_struct_dh_st

type _Ctype_DH_METHOD = _Ctype_struct_dh_method

type _Ctype_DSA = _Ctype_struct_dsa_st

type _Ctype_DSA_METHOD = _Ctype_struct_dsa_method

type _Ctype_DSA_SIG = _Ctype_struct_DSA_SIG_st

type _Ctype_EC_GROUP = _Ctype_struct_ec_group_st

type _Ctype_EC_KEY = _Ctype_struct_ec_key_st

type _Ctype_EC_POINT = _Ctype_struct_ec_point_st

type _Ctype_ENGINE = _Ctype_struct_engine_st

type _Ctype_EVP_CIPHER = _Ctype_struct_evp_cipher_st

type _Ctype_EVP_CIPHER_CTX = _Ctype_struct_evp_cipher_ctx_st

type _Ctype_EVP_MD = _Ctype_struct_env_md_st

type _Ctype_EVP_MD_CTX = _Ctype_struct_env_md_ctx_st

type _Ctype_EVP_PKEY = _Ctype_struct_evp_pkey_st

type _Ctype_EVP_PKEY_ASN1_METHOD = _Ctype_struct_evp_pkey_asn1_method_st

type _Ctype_EVP_PKEY_CTX = _Ctype_struct_evp_pkey_ctx_st

type _Ctype_GO_BIGNUM = _Ctype_struct_bignum_st

type _Ctype_GO_BN_CTX = _Ctype_struct_bignum_ctx

type _Ctype_GO_BN_GENCB = _Ctype_struct_bn_gencb_st

type _Ctype_GO_EC_GROUP = _Ctype_struct_ec_group_st

type _Ctype_GO_EC_KEY = _Ctype_struct_ec_key_st

type _Ctype_GO_EC_POINT = _Ctype_struct_ec_point_st

type _Ctype_GO_EVP_MD = _Ctype_struct_env_md_st

type _Ctype_GO_EVP_PKEY = _Ctype_struct_evp_pkey_st

type _Ctype_GO_EVP_PKEY_CTX = _Ctype_struct_evp_pkey_ctx_st

type _Ctype_GO_HMAC_CTX = _Ctype_struct_hmac_ctx_st

type _Ctype_GO_RSA = _Ctype_struct_rsa_st

type _Ctype_GO_SHA256_CTX = _Ctype_struct_SHA256state_st

type _Ctype_GO_SHA512_CTX = _Ctype_struct_SHA512state_st

type _Ctype_GO_SHA_CTX = _Ctype_struct_SHAstate_st

type _Ctype_HMAC_CTX = _Ctype_struct_hmac_ctx_st

type _Ctype_RSA = _Ctype_struct_rsa_st

type _Ctype_RSA_METHOD = _Ctype_struct_rsa_meth_st

type _Ctype_SHA256_CTX = _Ctype_struct_SHA256state_st

type _Ctype_SHA512_CTX = _Ctype_struct_SHA512state_st

type _Ctype_SHA_CTX = _Ctype_struct_SHAstate_st

type _Ctype__GoBytes_ []byte

type _Ctype__GoString_ string

type _Ctype__STACK = _Ctype_struct_stack_st

type _Ctype_char int8

type _Ctype_int int32

type _Ctype_intgo = _Ctype_ptrdiff_t

type _Ctype_long int64

type _Ctype_point_conversion_form_t uint32

type _Ctype_ptrdiff_t = _Ctype_long

type _Ctype_size_t = _Ctype_ulong

type _Ctype_struct_ASN1_VALUE_st _cgopackage.Incomplete

type _Ctype_struct_DSA_SIG_st struct {
	r	*_Ctype_struct_bignum_st
	s	*_Ctype_struct_bignum_st
}

type _Ctype_struct_SHA256state_st struct {
	h	[8]_Ctype_uint
	Nl	_Ctype_uint
	Nh	_Ctype_uint
	data	[16]_Ctype_uint
	num	_Ctype_uint
	md_len	_Ctype_uint
}

type _Ctype_struct_SHA512state_st struct {
	h	[8]_Ctype_ulonglong
	Nl	_Ctype_ulonglong
	Nh	_Ctype_ulonglong
	u	[128]byte
	num	_Ctype_uint
	md_len	_Ctype_uint
}

type _Ctype_struct_SHAstate_st struct {
	h0	_Ctype_uint
	h1	_Ctype_uint
	h2	_Ctype_uint
	h3	_Ctype_uint
	h4	_Ctype_uint
	Nl	_Ctype_uint
	Nh	_Ctype_uint
	data	[16]_Ctype_uint
	num	_Ctype_uint
}

type _Ctype_struct_asn1_object_st struct {
	sn	*_Ctype_char
	ln	*_Ctype_char
	nid	_Ctype_int
	length	_Ctype_int
	data	*_Ctype_uchar
	flags	_Ctype_int
	_	[4]byte
}

type _Ctype_struct_asn1_string_st struct {
	length	_Ctype_int
	_type	_Ctype_int
	data	*_Ctype_uchar
	flags	_Ctype_long
}

type _Ctype_struct_asn1_type_st struct {
	_type	_Ctype_int
	_	[4]byte
	value	[8]byte
}

type _Ctype_struct_bignum_ctx _cgopackage.Incomplete

type _Ctype_struct_bignum_st struct {
	d	*_Ctype_ulong
	top	_Ctype_int
	dmax	_Ctype_int
	neg	_Ctype_int
	flags	_Ctype_int
}

type _Ctype_struct_bn_blinding_st _cgopackage.Incomplete

type _Ctype_struct_bn_gencb_st struct {
	ver	_Ctype_uint
	arg	unsafe.Pointer
	cb	[8]byte
}

type _Ctype_struct_bn_mont_ctx_st struct {
	ri	_Ctype_int
	RR	_Ctype_struct_bignum_st
	N	_Ctype_struct_bignum_st
	Ni	_Ctype_struct_bignum_st
	n0	[2]_Ctype_ulong
	flags	_Ctype_int
	_	[4]byte
}

type _Ctype_struct_crypto_ex_data_st struct {
	sk	*_Ctype_struct_stack_st_void
	dummy	_Ctype_int
	_	[4]byte
}

type _Ctype_struct_dh_method struct {
	name		*_Ctype_char
	generate_key	*[0]byte
	compute_key	*[0]byte
	bn_mod_exp	*[0]byte
	init		*[0]byte
	finish		*[0]byte
	flags		_Ctype_int
	app_data	*_Ctype_char
	generate_params	*[0]byte
}

type _Ctype_struct_dh_st struct {
	pad		_Ctype_int
	version		_Ctype_int
	p		*_Ctype_struct_bignum_st
	g		*_Ctype_struct_bignum_st
	length		_Ctype_long
	pub_key		*_Ctype_struct_bignum_st
	priv_key	*_Ctype_struct_bignum_st
	flags		_Ctype_int
	method_mont_p	*_Ctype_struct_bn_mont_ctx_st
	q		*_Ctype_struct_bignum_st
	j		*_Ctype_struct_bignum_st
	seed		*_Ctype_uchar
	seedlen		_Ctype_int
	counter		*_Ctype_struct_bignum_st
	references	_Ctype_int
	ex_data		_Ctype_struct_crypto_ex_data_st
	meth		*_Ctype_struct_dh_method
	engine		*_Ctype_struct_engine_st
}

type _Ctype_struct_dsa_method struct {
	name		*_Ctype_char
	dsa_do_sign	*[0]byte
	dsa_sign_setup	*[0]byte
	dsa_do_verify	*[0]byte
	dsa_mod_exp	*[0]byte
	bn_mod_exp	*[0]byte
	init		*[0]byte
	finish		*[0]byte
	flags		_Ctype_int
	app_data	*_Ctype_char
	dsa_paramgen	*[0]byte
	dsa_keygen	*[0]byte
}

type _Ctype_struct_dsa_st struct {
	pad		_Ctype_int
	version		_Ctype_long
	write_params	_Ctype_int
	p		*_Ctype_struct_bignum_st
	q		*_Ctype_struct_bignum_st
	g		*_Ctype_struct_bignum_st
	pub_key		*_Ctype_struct_bignum_st
	priv_key	*_Ctype_struct_bignum_st
	kinv		*_Ctype_struct_bignum_st
	r		*_Ctype_struct_bignum_st
	flags		_Ctype_int
	method_mont_p	*_Ctype_struct_bn_mont_ctx_st
	references	_Ctype_int
	ex_data		_Ctype_struct_crypto_ex_data_st
	meth		*_Ctype_struct_dsa_method
	engine		*_Ctype_struct_engine_st
}

type _Ctype_struct_ec_group_st _cgopackage.Incomplete

type _Ctype_struct_ec_key_st _cgopackage.Incomplete

type _Ctype_struct_ec_point_st _cgopackage.Incomplete

type _Ctype_struct_engine_st _cgopackage.Incomplete

type _Ctype_struct_env_md_ctx_st struct {
	digest	*_Ctype_struct_env_md_st
	engine	*_Ctype_struct_engine_st
	flags	_Ctype_ulong
	md_data	unsafe.Pointer
	pctx	*_Ctype_struct_evp_pkey_ctx_st
	update	*[0]byte
}

type _Ctype_struct_env_md_st struct {
	_type			_Ctype_int
	pkey_type		_Ctype_int
	md_size			_Ctype_int
	flags			_Ctype_ulong
	init			*[0]byte
	update			*[0]byte
	final			*[0]byte
	copy			*[0]byte
	cleanup			*[0]byte
	sign			*[0]byte
	verify			*[0]byte
	required_pkey_type	[5]_Ctype_int
	block_size		_Ctype_int
	ctx_size		_Ctype_int
	md_ctrl			*[0]byte
}

type _Ctype_struct_evp_cipher_ctx_st struct {
	cipher		*_Ctype_struct_evp_cipher_st
	engine		*_Ctype_struct_engine_st
	encrypt		_Ctype_int
	buf_len		_Ctype_int
	oiv		[16]_Ctype_uchar
	iv		[16]_Ctype_uchar
	buf		[32]_Ctype_uchar
	num		_Ctype_int
	app_data	unsafe.Pointer
	key_len		_Ctype_int
	flags		_Ctype_ulong
	cipher_data	unsafe.Pointer
	final_used	_Ctype_int
	block_mask	_Ctype_int
	final		[32]_Ctype_uchar
}

type _Ctype_struct_evp_cipher_st struct {
	nid			_Ctype_int
	block_size		_Ctype_int
	key_len			_Ctype_int
	iv_len			_Ctype_int
	flags			_Ctype_ulong
	init			*[0]byte
	do_cipher		*[0]byte
	cleanup			*[0]byte
	ctx_size		_Ctype_int
	set_asn1_parameters	*[0]byte
	get_asn1_parameters	*[0]byte
	ctrl			*[0]byte
	app_data		unsafe.Pointer
}

type _Ctype_struct_evp_pkey_asn1_method_st _cgopackage.Incomplete

type _Ctype_struct_evp_pkey_ctx_st _cgopackage.Incomplete

type _Ctype_struct_evp_pkey_st struct {
	_type		_Ctype_int
	save_type	_Ctype_int
	references	_Ctype_int
	ameth		*_Ctype_struct_evp_pkey_asn1_method_st
	engine		*_Ctype_struct_engine_st
	pkey		[8]byte
	save_parameters	_Ctype_int
	attributes	*_Ctype_struct_stack_st_X509_ATTRIBUTE
}

type _Ctype_struct_hmac_ctx_st struct {
	md		*_Ctype_struct_env_md_st
	md_ctx		_Ctype_struct_env_md_ctx_st
	i_ctx		_Ctype_struct_env_md_ctx_st
	o_ctx		_Ctype_struct_env_md_ctx_st
	key_length	_Ctype_uint
	key		[128]_Ctype_uchar
	_		[4]byte
}

type _Ctype_struct_rsa_meth_st struct {
	name		*_Ctype_char
	rsa_pub_enc	*[0]byte
	rsa_pub_dec	*[0]byte
	rsa_priv_enc	*[0]byte
	rsa_priv_dec	*[0]byte
	rsa_mod_exp	*[0]byte
	bn_mod_exp	*[0]byte
	init		*[0]byte
	finish		*[0]byte
	flags		_Ctype_int
	app_data	*_Ctype_char
	rsa_sign	*[0]byte
	rsa_verify	*[0]byte
	rsa_keygen	*[0]byte
}

type _Ctype_struct_rsa_st struct {
	pad		_Ctype_int
	version		_Ctype_long
	meth		*_Ctype_struct_rsa_meth_st
	engine		*_Ctype_struct_engine_st
	n		*_Ctype_struct_bignum_st
	e		*_Ctype_struct_bignum_st
	d		*_Ctype_struct_bignum_st
	p		*_Ctype_struct_bignum_st
	q		*_Ctype_struct_bignum_st
	dmp1		*_Ctype_struct_bignum_st
	dmq1		*_Ctype_struct_bignum_st
	iqmp		*_Ctype_struct_bignum_st
	ex_data		_Ctype_struct_crypto_ex_data_st
	references	_Ctype_int
	flags		_Ctype_int
	_method_mod_n	*_Ctype_struct_bn_mont_ctx_st
	_method_mod_p	*_Ctype_struct_bn_mont_ctx_st
	_method_mod_q	*_Ctype_struct_bn_mont_ctx_st
	bignum_data	*_Ctype_char
	blinding	*_Ctype_struct_bn_blinding_st
	mt_blinding	*_Ctype_struct_bn_blinding_st
}

type _Ctype_struct_stack_st struct {
	num		_Ctype_int
	data		**_Ctype_char
	sorted		_Ctype_int
	num_alloc	_Ctype_int
	comp		*[0]byte
}

type _Ctype_struct_stack_st_X509_ATTRIBUTE struct {
	stack _Ctype_struct_stack_st
}

type _Ctype_struct_stack_st_void struct {
	stack _Ctype_struct_stack_st
}

type _Ctype_uchar uint8

type _Ctype_uint uint32

type _Ctype_uint8_t = _Ctype_uchar

type _Ctype_ulong uint64

type _Ctype_ulonglong uint64

type _Ctype_union___0 = [8]byte

type _Ctype_union___1 = [8]byte

type _Ctype_union___2 = [8]byte

type _Ctype_union___3 = [8]byte

type _Ctype_union___4 = [8]byte

type _Ctype_union___5 = [8]byte

type _Ctype_union___6 = [8]byte

type _Ctype_union___7 = [128]byte

type _Ctype_void [0]byte

//go:linkname _cgo_runtime_cgocall runtime.cgocall
func _cgo_runtime_cgocall(unsafe.Pointer, uintptr) int32

//go:linkname _cgoCheckPointer runtime.cgoCheckPointer
func _cgoCheckPointer(interface{}, interface{})

//go:linkname _cgoCheckResult runtime.cgoCheckResult
func _cgoCheckResult(interface{})
const _Ciconst_EVP_MAX_MD_SIZE = 0x40
const _Ciconst_GO_AES_DECRYPT = 0x0
const _Ciconst_GO_AES_ENCRYPT = 0x1
const _Ciconst_GO_EVP_PKEY_CTRL_EC_PARAMGEN_CURVE_NID = 0x1001
const _Ciconst_GO_EVP_PKEY_CTRL_RSA_KEYGEN_BITS = 0x1003
const _Ciconst_GO_EVP_PKEY_EC = 0x198
const _Ciconst_GO_EVP_PKEY_HKDEF_MODE_EXPAND_ONLY = 0x1
const _Ciconst_GO_EVP_PKEY_HKDEF_MODE_EXTRACT_ONLY = 0x0
const _Ciconst_GO_EVP_PKEY_HKDF = 0x0
const _Ciconst_GO_NID_X9_62_prime256v1 = 0x19f
const _Ciconst_GO_NID_secp224r1 = 0x2c9
const _Ciconst_GO_NID_secp384r1 = 0x2cb
const _Ciconst_GO_NID_secp521r1 = 0x2cc
const _Ciconst_GO_POINT_CONVERSION_UNCOMPRESSED = 0x4
const _Ciconst_GO_RSA_NO_PADDING = 0x3
const _Ciconst_GO_RSA_PKCS1_OAEP_PADDING = 0x4
const _Ciconst_GO_RSA_PKCS1_PADDING = 0x1
const _Ciconst_GO_RSA_PKCS1_PSS_PADDING = 0x6
const _Ciconst_GO_RSA_PSS_SALTLEN_AUTO = -0x2
const _Ciconst_GO_RSA_PSS_SALTLEN_DIGEST = -0x1


// CString converts the Go string s to a C string.
//
// The C string is allocated in the C heap using malloc.
// It is the caller's responsibility to arrange for it to be
// freed, such as by calling C.free (be sure to include stdlib.h
// if C.free is needed).
func _Cfunc_CString(s string) *_Ctype_char {
	if len(s)+1 <= 0 {
		panic("string too large")
	}
	p := _cgo_cmalloc(uint64(len(s)+1))
	sliceHeader := struct {
		p   unsafe.Pointer
		len int
		cap int
	}{p, len(s)+1, len(s)+1}
	b := *(*[]byte)(unsafe.Pointer(&sliceHeader))
	copy(b, s)
	b[len(s)] = 0
	return (*_Ctype_char)(p)
}

//go:linkname _cgo_runtime_gobytes runtime.gobytes
func _cgo_runtime_gobytes(unsafe.Pointer, int) []byte

// GoBytes converts the C data p with explicit length l to a Go []byte.
func _Cfunc_GoBytes(p unsafe.Pointer, l _Ctype_int) []byte {
	return _cgo_runtime_gobytes(p, int(l))
}

//go:linkname _cgo_runtime_gostring runtime.gostring
func _cgo_runtime_gostring(*_Ctype_char) string

// GoString converts the C string p into a Go string.
func _Cfunc_GoString(p *_Ctype_char) string {
	return _cgo_runtime_gostring(p)
}
//go:cgo_import_static _cgo_0edd79296193_Cmacro_NULL
//go:linkname __cgofn__cgo_0edd79296193_Cmacro_NULL _cgo_0edd79296193_Cmacro_NULL
var __cgofn__cgo_0edd79296193_Cmacro_NULL byte
var _cgo_0edd79296193_Cmacro_NULL = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cmacro_NULL)

//go:cgo_unsafe_args
func _Cmacro_NULL() (r1 unsafe.Pointer) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cmacro_NULL, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}

func _Cfunc__CMalloc(n _Ctype_size_t) unsafe.Pointer {
	return _cgo_cmalloc(uint64(n))
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_BN_bn2binpad
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_BN_bn2binpad _cgo_0edd79296193_Cfunc__goboringcrypto_BN_bn2binpad
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_BN_bn2binpad byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_BN_bn2binpad = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_BN_bn2binpad)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_BN_bn2binpad(p0 *_Ctype_struct_bignum_st, p1 *_Ctype_uchar, p2 _Ctype_int) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_BN_bn2binpad, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_BN_bn2lebinpad
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_BN_bn2lebinpad _cgo_0edd79296193_Cfunc__goboringcrypto_BN_bn2lebinpad
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_BN_bn2lebinpad byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_BN_bn2lebinpad = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_BN_bn2lebinpad)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_BN_bn2lebinpad(p0 *_Ctype_struct_bignum_st, p1 *_Ctype_uchar, p2 _Ctype_int) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_BN_bn2lebinpad, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_BN_free
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_BN_free _cgo_0edd79296193_Cfunc__goboringcrypto_BN_free
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_BN_free byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_BN_free = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_BN_free)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_BN_free(p0 *_Ctype_struct_bignum_st) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_BN_free, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_BN_lebin2bn
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_BN_lebin2bn _cgo_0edd79296193_Cfunc__goboringcrypto_BN_lebin2bn
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_BN_lebin2bn byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_BN_lebin2bn = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_BN_lebin2bn)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_BN_lebin2bn(p0 *_Ctype_uchar, p1 _Ctype_int, p2 *_Ctype_struct_bignum_st) (r1 *_Ctype_struct_bignum_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_BN_lebin2bn, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_BN_new
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_BN_new _cgo_0edd79296193_Cfunc__goboringcrypto_BN_new
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_BN_new byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_BN_new = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_BN_new)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_BN_new() (r1 *_Ctype_struct_bignum_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_BN_new, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_BN_num_bytes
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_BN_num_bytes _cgo_0edd79296193_Cfunc__goboringcrypto_BN_num_bytes
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_BN_num_bytes byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_BN_num_bytes = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_BN_num_bytes)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_BN_num_bytes(p0 *_Ctype_struct_bignum_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_BN_num_bytes, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_DLOPEN_OPENSSL
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_DLOPEN_OPENSSL _cgo_0edd79296193_Cfunc__goboringcrypto_DLOPEN_OPENSSL
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_DLOPEN_OPENSSL byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_DLOPEN_OPENSSL = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_DLOPEN_OPENSSL)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_DLOPEN_OPENSSL() (r1 unsafe.Pointer) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_DLOPEN_OPENSSL, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_ECDSA_sign
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_ECDSA_sign _cgo_0edd79296193_Cfunc__goboringcrypto_ECDSA_sign
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_ECDSA_sign byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_ECDSA_sign = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_ECDSA_sign)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_ECDSA_sign(p0 *_Ctype_struct_env_md_st, p1 *_Ctype_uint8_t, p2 _Ctype_size_t, p3 *_Ctype_uint8_t, p4 *_Ctype_size_t, p5 *_Ctype_struct_ec_key_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_ECDSA_sign, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_ECDSA_size
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_ECDSA_size _cgo_0edd79296193_Cfunc__goboringcrypto_ECDSA_size
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_ECDSA_size byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_ECDSA_size = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_ECDSA_size)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_ECDSA_size(p0 *_Ctype_struct_ec_key_st) (r1 _Ctype_size_t) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_ECDSA_size, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_ECDSA_verify
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_ECDSA_verify _cgo_0edd79296193_Cfunc__goboringcrypto_ECDSA_verify
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_ECDSA_verify byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_ECDSA_verify = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_ECDSA_verify)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_ECDSA_verify(p0 *_Ctype_struct_env_md_st, p1 *_Ctype_uint8_t, p2 _Ctype_size_t, p3 *_Ctype_uint8_t, p4 _Ctype_uint, p5 *_Ctype_struct_ec_key_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_ECDSA_verify, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_free
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_free _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_free
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_free byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_free = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_free)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EC_KEY_free(p0 *_Ctype_struct_ec_key_st) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_free, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_generate_key
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_generate_key _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_generate_key
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_generate_key byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_generate_key = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_generate_key)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EC_KEY_generate_key(p0 *_Ctype_struct_ec_key_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_generate_key, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_get0_group
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_get0_group _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_get0_group
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_get0_group byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_get0_group = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_get0_group)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EC_KEY_get0_group(p0 *_Ctype_struct_ec_key_st) (r1 *_Ctype_struct_ec_group_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_get0_group, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_get0_private_key
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_get0_private_key _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_get0_private_key
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_get0_private_key byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_get0_private_key = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_get0_private_key)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EC_KEY_get0_private_key(p0 *_Ctype_struct_ec_key_st) (r1 *_Ctype_struct_bignum_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_get0_private_key, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_get0_public_key
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_get0_public_key _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_get0_public_key
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_get0_public_key byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_get0_public_key = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_get0_public_key)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EC_KEY_get0_public_key(p0 *_Ctype_struct_ec_key_st) (r1 *_Ctype_struct_ec_point_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_get0_public_key, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_new_by_curve_name
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_new_by_curve_name _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_new_by_curve_name
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_new_by_curve_name byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_new_by_curve_name = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_new_by_curve_name)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EC_KEY_new_by_curve_name(p0 _Ctype_int) (r1 *_Ctype_struct_ec_key_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_new_by_curve_name, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_set_private_key
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_set_private_key _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_set_private_key
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_set_private_key byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_set_private_key = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_set_private_key)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EC_KEY_set_private_key(p0 *_Ctype_struct_ec_key_st, p1 *_Ctype_struct_bignum_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_set_private_key, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_set_public_key
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_set_public_key _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_set_public_key
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_set_public_key byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_set_public_key = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_set_public_key)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EC_KEY_set_public_key(p0 *_Ctype_struct_ec_key_st, p1 *_Ctype_struct_ec_point_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EC_KEY_set_public_key, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_free
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_free _cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_free
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_free byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_free = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_free)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EC_POINT_free(p0 *_Ctype_struct_ec_point_st) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_free, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_get_affine_coordinates_GFp
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_get_affine_coordinates_GFp _cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_get_affine_coordinates_GFp
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_get_affine_coordinates_GFp byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_get_affine_coordinates_GFp = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_get_affine_coordinates_GFp)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EC_POINT_get_affine_coordinates_GFp(p0 *_Ctype_struct_ec_group_st, p1 *_Ctype_struct_ec_point_st, p2 *_Ctype_struct_bignum_st, p3 *_Ctype_struct_bignum_st, p4 *_Ctype_struct_bignum_ctx) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_get_affine_coordinates_GFp, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_new
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_new _cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_new
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_new byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_new = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_new)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EC_POINT_new(p0 *_Ctype_struct_ec_group_st) (r1 *_Ctype_struct_ec_point_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_new, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_point2oct
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_point2oct _cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_point2oct
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_point2oct byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_point2oct = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_point2oct)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EC_POINT_point2oct(p0 *_Ctype_struct_ec_group_st, p1 *_Ctype_struct_ec_point_st, p2 _Ctype_point_conversion_form_t, p3 *_Ctype_uchar, p4 _Ctype_size_t, p5 *_Ctype_struct_bignum_ctx) (r1 _Ctype_size_t) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_point2oct, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_set_affine_coordinates_GFp
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_set_affine_coordinates_GFp _cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_set_affine_coordinates_GFp
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_set_affine_coordinates_GFp byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_set_affine_coordinates_GFp = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_set_affine_coordinates_GFp)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EC_POINT_set_affine_coordinates_GFp(p0 *_Ctype_struct_ec_group_st, p1 *_Ctype_struct_ec_point_st, p2 *_Ctype_struct_bignum_st, p3 *_Ctype_struct_bignum_st, p4 *_Ctype_struct_bignum_ctx) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EC_POINT_set_affine_coordinates_GFp, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_AES_ctr128_enc
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_AES_ctr128_enc _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_AES_ctr128_enc
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_AES_ctr128_enc byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_AES_ctr128_enc = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_AES_ctr128_enc)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_AES_ctr128_enc(p0 *_Ctype_struct_evp_cipher_ctx_st, p1 *_Ctype_uint8_t, p2 *_Ctype_uint8_t, p3 _Ctype_size_t) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_AES_ctr128_enc, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_free
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_free _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_free
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_free byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_free = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_free)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_CIPHER_CTX_free(p0 *_Ctype_struct_evp_cipher_ctx_st) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_free, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_new
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_new _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_new
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_new byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_new = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_new)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_CIPHER_CTX_new() (r1 *_Ctype_struct_evp_cipher_ctx_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_new, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_open
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_open _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_open
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_open byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_open = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_open)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_CIPHER_CTX_open(p0 *_Ctype_uint8_t, p1 _Ctype_int, p2 *_Ctype_uint8_t, p3 _Ctype_int, p4 *_Ctype_uint8_t, p5 *_Ctype_uint8_t, p6 _Ctype_int, p7 *_Ctype_uint8_t, p8 _Ctype_int, p9 *_Ctype_uint8_t, p10 *_Ctype_size_t) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_open, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
		_Cgo_use(p6)
		_Cgo_use(p7)
		_Cgo_use(p8)
		_Cgo_use(p9)
		_Cgo_use(p10)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_seal
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_seal _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_seal
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_seal byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_seal = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_seal)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_CIPHER_CTX_seal(p0 *_Ctype_uint8_t, p1 *_Ctype_uint8_t, p2 *_Ctype_uint8_t, p3 _Ctype_size_t, p4 *_Ctype_uint8_t, p5 _Ctype_size_t, p6 *_Ctype_size_t, p7 *_Ctype_uint8_t, p8 _Ctype_int) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_seal, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
		_Cgo_use(p6)
		_Cgo_use(p7)
		_Cgo_use(p8)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_set_padding
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_set_padding _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_set_padding
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_set_padding byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_set_padding = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_set_padding)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_CIPHER_CTX_set_padding(p0 *_Ctype_struct_evp_cipher_ctx_st, p1 _Ctype_int) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CIPHER_CTX_set_padding, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CipherInit_ex
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CipherInit_ex _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CipherInit_ex
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CipherInit_ex byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CipherInit_ex = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CipherInit_ex)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_CipherInit_ex(p0 *_Ctype_struct_evp_cipher_ctx_st, p1 *_Ctype_struct_evp_cipher_st, p2 *_Ctype_struct_engine_st, p3 *_Ctype_uchar, p4 *_Ctype_uchar, p5 _Ctype_int) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CipherInit_ex, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CipherUpdate
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CipherUpdate _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CipherUpdate
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CipherUpdate byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CipherUpdate = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CipherUpdate)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_CipherUpdate(p0 *_Ctype_struct_evp_cipher_ctx_st, p1 *_Ctype_uchar, p2 *_Ctype_int, p3 *_Ctype_uchar, p4 _Ctype_int) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_CipherUpdate, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_EncryptInit_ex
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_EncryptInit_ex _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_EncryptInit_ex
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_EncryptInit_ex byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_EncryptInit_ex = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_EncryptInit_ex)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_EncryptInit_ex(p0 *_Ctype_struct_evp_cipher_ctx_st, p1 *_Ctype_struct_evp_cipher_st, p2 *_Ctype_struct_engine_st, p3 *_Ctype_uchar, p4 *_Ctype_uchar) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_EncryptInit_ex, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_MD_type
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_MD_type _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_MD_type
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_MD_type byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_MD_type = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_MD_type)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_MD_type(p0 *_Ctype_struct_env_md_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_MD_type, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_add1_hkdf_info
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_add1_hkdf_info _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_add1_hkdf_info
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_add1_hkdf_info byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_add1_hkdf_info = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_add1_hkdf_info)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_CTX_add1_hkdf_info(p0 *_Ctype_struct_evp_pkey_ctx_st, p1 *_Ctype_uchar, p2 _Ctype_int) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_add1_hkdf_info, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_ctrl
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_ctrl _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_ctrl
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_ctrl byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_ctrl = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_ctrl)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_CTX_ctrl(p0 *_Ctype_struct_evp_pkey_ctx_st, p1 _Ctype_int, p2 _Ctype_int, p3 _Ctype_int, p4 _Ctype_int, p5 unsafe.Pointer) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_ctrl, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_free
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_free _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_free
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_free byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_free = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_free)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_CTX_free(p0 *_Ctype_struct_evp_pkey_ctx_st) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_free, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_new
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_new _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_new
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_new byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_new = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_new)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_CTX_new(p0 *_Ctype_struct_evp_pkey_st, p1 *_Ctype_struct_engine_st) (r1 *_Ctype_struct_evp_pkey_ctx_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_new, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_new_id
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_new_id _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_new_id
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_new_id byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_new_id = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_new_id)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_CTX_new_id(p0 _Ctype_int, p1 *_Ctype_struct_engine_st) (r1 *_Ctype_struct_evp_pkey_ctx_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_new_id, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set0_rsa_oaep_label
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set0_rsa_oaep_label _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set0_rsa_oaep_label
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set0_rsa_oaep_label byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set0_rsa_oaep_label = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set0_rsa_oaep_label)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_CTX_set0_rsa_oaep_label(p0 *_Ctype_struct_evp_pkey_ctx_st, p1 *_Ctype_uint8_t, p2 _Ctype_int) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set0_rsa_oaep_label, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set1_hkdf_key
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set1_hkdf_key _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set1_hkdf_key
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set1_hkdf_key byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set1_hkdf_key = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set1_hkdf_key)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_CTX_set1_hkdf_key(p0 *_Ctype_struct_evp_pkey_ctx_st, p1 *_Ctype_uchar, p2 _Ctype_int) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set1_hkdf_key, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set1_hkdf_salt
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set1_hkdf_salt _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set1_hkdf_salt
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set1_hkdf_salt byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set1_hkdf_salt = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set1_hkdf_salt)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_CTX_set1_hkdf_salt(p0 *_Ctype_struct_evp_pkey_ctx_st, p1 *_Ctype_uchar, p2 _Ctype_int) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set1_hkdf_salt, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_hkdf_md
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_hkdf_md _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_hkdf_md
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_hkdf_md byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_hkdf_md = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_hkdf_md)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_CTX_set_hkdf_md(p0 *_Ctype_struct_evp_pkey_ctx_st, p1 *_Ctype_struct_env_md_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_hkdf_md, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_hkdf_mode
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_hkdf_mode _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_hkdf_mode
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_hkdf_mode byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_hkdf_mode = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_hkdf_mode)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_CTX_set_hkdf_mode(p0 *_Ctype_struct_evp_pkey_ctx_st, p1 _Ctype_int) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_hkdf_mode, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_mgf1_md
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_mgf1_md _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_mgf1_md
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_mgf1_md byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_mgf1_md = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_mgf1_md)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_mgf1_md(p0 *_Ctype_struct_evp_pkey_ctx_st, p1 *_Ctype_struct_env_md_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_mgf1_md, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_oaep_md
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_oaep_md _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_oaep_md
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_oaep_md byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_oaep_md = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_oaep_md)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_oaep_md(p0 *_Ctype_struct_evp_pkey_ctx_st, p1 *_Ctype_struct_env_md_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_oaep_md, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_padding
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_padding _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_padding
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_padding byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_padding = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_padding)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_padding(p0 *_Ctype_struct_evp_pkey_ctx_st, p1 _Ctype_int) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_padding, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_pss_saltlen
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_pss_saltlen _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_pss_saltlen
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_pss_saltlen byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_pss_saltlen = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_pss_saltlen)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_pss_saltlen(p0 *_Ctype_struct_evp_pkey_ctx_st, p1 _Ctype_int) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_CTX_set_rsa_pss_saltlen, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_decrypt
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_decrypt _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_decrypt
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_decrypt byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_decrypt = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_decrypt)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_decrypt(p0 *_Ctype_struct_evp_pkey_ctx_st, p1 *_Ctype_uint8_t, p2 *_Ctype_size_t, p3 *_Ctype_uint8_t, p4 _Ctype_size_t) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_decrypt, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_decrypt_init
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_decrypt_init _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_decrypt_init
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_decrypt_init byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_decrypt_init = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_decrypt_init)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_decrypt_init(p0 *_Ctype_struct_evp_pkey_ctx_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_decrypt_init, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_derive
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_derive _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_derive
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_derive byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_derive = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_derive)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_derive(p0 *_Ctype_struct_evp_pkey_ctx_st, p1 *_Ctype_uchar, p2 *_Ctype_size_t) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_derive, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_derive_init
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_derive_init _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_derive_init
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_derive_init byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_derive_init = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_derive_init)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_derive_init(p0 *_Ctype_struct_evp_pkey_ctx_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_derive_init, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_derive_set_peer_ex
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_derive_set_peer_ex _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_derive_set_peer_ex
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_derive_set_peer_ex byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_derive_set_peer_ex = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_derive_set_peer_ex)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_derive_set_peer_ex(p0 *_Ctype_struct_evp_pkey_ctx_st, p1 *_Ctype_struct_evp_pkey_st, p2 _Ctype_int) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_derive_set_peer_ex, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_encrypt
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_encrypt _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_encrypt
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_encrypt byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_encrypt = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_encrypt)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_encrypt(p0 *_Ctype_struct_evp_pkey_ctx_st, p1 *_Ctype_uint8_t, p2 *_Ctype_size_t, p3 *_Ctype_uint8_t, p4 _Ctype_size_t) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_encrypt, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_encrypt_init
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_encrypt_init _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_encrypt_init
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_encrypt_init byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_encrypt_init = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_encrypt_init)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_encrypt_init(p0 *_Ctype_struct_evp_pkey_ctx_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_encrypt_init, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_free
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_free _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_free
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_free byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_free = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_free)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_free(p0 *_Ctype_struct_evp_pkey_st) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_free, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get0_EC_KEY
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get0_EC_KEY _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get0_EC_KEY
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get0_EC_KEY byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get0_EC_KEY = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get0_EC_KEY)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_get0_EC_KEY(p0 *_Ctype_struct_evp_pkey_st) (r1 *_Ctype_struct_ec_key_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get0_EC_KEY, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get1_encoded_ecdh_public_key
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get1_encoded_ecdh_public_key _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get1_encoded_ecdh_public_key
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get1_encoded_ecdh_public_key byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get1_encoded_ecdh_public_key = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get1_encoded_ecdh_public_key)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_get1_encoded_ecdh_public_key(p0 *_Ctype_struct_evp_pkey_st, p1 **_Ctype_uchar) (r1 _Ctype_size_t) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get1_encoded_ecdh_public_key, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get_bits
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get_bits _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get_bits
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get_bits byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get_bits = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get_bits)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_get_bits(p0 *_Ctype_struct_evp_pkey_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get_bits, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get_bn_param
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get_bn_param _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get_bn_param
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get_bn_param byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get_bn_param = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get_bn_param)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_get_bn_param(p0 *_Ctype_struct_evp_pkey_st, p1 *_Ctype_char, p2 **_Ctype_struct_bignum_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_get_bn_param, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_keygen
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_keygen _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_keygen
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_keygen byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_keygen = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_keygen)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_keygen(p0 *_Ctype_struct_evp_pkey_ctx_st, p1 **_Ctype_struct_evp_pkey_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_keygen, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_keygen_init
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_keygen_init _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_keygen_init
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_keygen_init byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_keygen_init = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_keygen_init)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_keygen_init(p0 *_Ctype_struct_evp_pkey_ctx_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_keygen_init, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_new
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_new _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_new
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_new byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_new = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_new)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_new() (r1 *_Ctype_struct_evp_pkey_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_new, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_new_for_ecdh
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_new_for_ecdh _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_new_for_ecdh
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_new_for_ecdh byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_new_for_ecdh = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_new_for_ecdh)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_new_for_ecdh(p0 _Ctype_int, p1 *_Ctype_uint8_t, p2 _Ctype_size_t, p3 _Ctype_int) (r1 *_Ctype_struct_evp_pkey_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_new_for_ecdh, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_set1_RSA
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_set1_RSA _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_set1_RSA
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_set1_RSA byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_set1_RSA = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_set1_RSA)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_set1_RSA(p0 *_Ctype_struct_evp_pkey_st, p1 *_Ctype_struct_rsa_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_set1_RSA, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_set_ecdh_public_key_from_private
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_set_ecdh_public_key_from_private _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_set_ecdh_public_key_from_private
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_set_ecdh_public_key_from_private byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_set_ecdh_public_key_from_private = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_set_ecdh_public_key_from_private)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_PKEY_set_ecdh_public_key_from_private(p0 *_Ctype_struct_evp_pkey_st, p1 _Ctype_int) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_PKEY_set_ecdh_public_key_from_private, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_RSA_sign
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_RSA_sign _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_RSA_sign
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_RSA_sign byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_RSA_sign = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_RSA_sign)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_RSA_sign(p0 *_Ctype_struct_env_md_st, p1 *_Ctype_uint8_t, p2 _Ctype_uint, p3 *_Ctype_uint8_t, p4 *_Ctype_size_t, p5 *_Ctype_struct_rsa_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_RSA_sign, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_RSA_verify
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_RSA_verify _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_RSA_verify
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_RSA_verify byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_RSA_verify = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_RSA_verify)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_RSA_verify(p0 *_Ctype_struct_env_md_st, p1 *_Ctype_uint8_t, p2 _Ctype_uint, p3 *_Ctype_uint8_t, p4 _Ctype_uint, p5 *_Ctype_struct_rsa_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_RSA_verify, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_128_cbc
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_128_cbc _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_128_cbc
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_128_cbc byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_128_cbc = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_128_cbc)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_aes_128_cbc() (r1 *_Ctype_struct_evp_cipher_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_128_cbc, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_128_ctr
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_128_ctr _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_128_ctr
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_128_ctr byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_128_ctr = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_128_ctr)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_aes_128_ctr() (r1 *_Ctype_struct_evp_cipher_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_128_ctr, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_128_ecb
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_128_ecb _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_128_ecb
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_128_ecb byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_128_ecb = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_128_ecb)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_aes_128_ecb() (r1 *_Ctype_struct_evp_cipher_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_128_ecb, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_192_cbc
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_192_cbc _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_192_cbc
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_192_cbc byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_192_cbc = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_192_cbc)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_aes_192_cbc() (r1 *_Ctype_struct_evp_cipher_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_192_cbc, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_192_ctr
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_192_ctr _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_192_ctr
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_192_ctr byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_192_ctr = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_192_ctr)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_aes_192_ctr() (r1 *_Ctype_struct_evp_cipher_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_192_ctr, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_192_ecb
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_192_ecb _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_192_ecb
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_192_ecb byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_192_ecb = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_192_ecb)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_aes_192_ecb() (r1 *_Ctype_struct_evp_cipher_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_192_ecb, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_256_cbc
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_256_cbc _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_256_cbc
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_256_cbc byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_256_cbc = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_256_cbc)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_aes_256_cbc() (r1 *_Ctype_struct_evp_cipher_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_256_cbc, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_256_ctr
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_256_ctr _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_256_ctr
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_256_ctr byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_256_ctr = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_256_ctr)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_aes_256_ctr() (r1 *_Ctype_struct_evp_cipher_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_256_ctr, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_256_ecb
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_256_ecb _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_256_ecb
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_256_ecb byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_256_ecb = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_256_ecb)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_aes_256_ecb() (r1 *_Ctype_struct_evp_cipher_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_aes_256_ecb, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_md5
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_md5 _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_md5
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_md5 byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_md5 = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_md5)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_md5() (r1 *_Ctype_struct_env_md_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_md5, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_md5_sha1
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_md5_sha1 _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_md5_sha1
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_md5_sha1 byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_md5_sha1 = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_md5_sha1)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_md5_sha1() (r1 *_Ctype_struct_env_md_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_md5_sha1, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_md_null
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_md_null _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_md_null
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_md_null byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_md_null = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_md_null)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_md_null() (r1 *_Ctype_struct_env_md_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_md_null, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha1
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha1 _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha1
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha1 byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha1 = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha1)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_sha1() (r1 *_Ctype_struct_env_md_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha1, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha224
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha224 _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha224
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha224 byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha224 = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha224)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_sha224() (r1 *_Ctype_struct_env_md_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha224, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha256
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha256 _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha256
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha256 byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha256 = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha256)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_sha256() (r1 *_Ctype_struct_env_md_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha256, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha384
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha384 _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha384
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha384 byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha384 = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha384)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_sha384() (r1 *_Ctype_struct_env_md_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha384, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha512
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha512 _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha512
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha512 byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha512 = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha512)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_sha512() (r1 *_Ctype_struct_env_md_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sha512, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sign_raw
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sign_raw _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sign_raw
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sign_raw byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sign_raw = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sign_raw)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_sign_raw(p0 *_Ctype_struct_env_md_st, p1 *_Ctype_struct_evp_pkey_ctx_st, p2 *_Ctype_uint8_t, p3 _Ctype_size_t, p4 *_Ctype_uint8_t, p5 *_Ctype_size_t, p6 *_Ctype_struct_rsa_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_sign_raw, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
		_Cgo_use(p6)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_verify_raw
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_verify_raw _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_verify_raw
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_verify_raw byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_EVP_verify_raw = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_EVP_verify_raw)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_EVP_verify_raw(p0 *_Ctype_uint8_t, p1 _Ctype_size_t, p2 *_Ctype_uint8_t, p3 _Ctype_uint, p4 *_Ctype_struct_rsa_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_EVP_verify_raw, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_FIPS_mode
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_FIPS_mode _cgo_0edd79296193_Cfunc__goboringcrypto_FIPS_mode
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_FIPS_mode byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_FIPS_mode = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_FIPS_mode)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_FIPS_mode() (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_FIPS_mode, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_copy_ex
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_copy_ex _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_copy_ex
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_copy_ex byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_copy_ex = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_copy_ex)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_HMAC_CTX_copy_ex(p0 *_Ctype_struct_hmac_ctx_st, p1 *_Ctype_struct_hmac_ctx_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_copy_ex, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_free
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_free _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_free
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_free byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_free = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_free)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_HMAC_CTX_free(p0 *_Ctype_struct_hmac_ctx_st) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_free, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_new
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_new _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_new
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_new byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_new = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_new)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_HMAC_CTX_new() (r1 *_Ctype_struct_hmac_ctx_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_new, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_reset
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_reset _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_reset
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_reset byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_reset = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_reset)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_HMAC_CTX_reset(p0 *_Ctype_struct_hmac_ctx_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_CTX_reset, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_Final
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_Final _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_Final
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_Final byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_Final = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_Final)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_HMAC_Final(p0 *_Ctype_struct_hmac_ctx_st, p1 *_Ctype_uint8_t, p2 *_Ctype_uint) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_Final, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_Init_ex
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_Init_ex _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_Init_ex
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_Init_ex byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_Init_ex = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_Init_ex)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_HMAC_Init_ex(p0 *_Ctype_struct_hmac_ctx_st, p1 unsafe.Pointer, p2 _Ctype_int, p3 *_Ctype_struct_env_md_st, p4 *_Ctype_struct_engine_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_Init_ex, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_Update
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_Update _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_Update
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_Update byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_Update = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_Update)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_HMAC_Update(p0 *_Ctype_struct_hmac_ctx_st, p1 *_Ctype_uint8_t, p2 _Ctype_size_t) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_Update, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_size
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_size _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_size
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_size byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_size = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_size)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_HMAC_size(p0 *_Ctype_struct_hmac_ctx_st) (r1 _Ctype_size_t) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_HMAC_size, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_OPENSSL_setup
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_OPENSSL_setup _cgo_0edd79296193_Cfunc__goboringcrypto_OPENSSL_setup
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_OPENSSL_setup byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_OPENSSL_setup = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_OPENSSL_setup)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_OPENSSL_setup() (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_OPENSSL_setup, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_OPENSSL_thread_setup
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_OPENSSL_thread_setup _cgo_0edd79296193_Cfunc__goboringcrypto_OPENSSL_thread_setup
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_OPENSSL_thread_setup byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_OPENSSL_thread_setup = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_OPENSSL_thread_setup)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_OPENSSL_thread_setup() (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_OPENSSL_thread_setup, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_RAND_bytes
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RAND_bytes _cgo_0edd79296193_Cfunc__goboringcrypto_RAND_bytes
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RAND_bytes byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_RAND_bytes = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RAND_bytes)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_RAND_bytes(p0 *_Ctype_uint8_t, p1 _Ctype_size_t) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_RAND_bytes, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_free
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_free _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_free
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_free byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_free = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_free)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_RSA_free(p0 *_Ctype_struct_rsa_st) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_RSA_free, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_generate_key_fips
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_generate_key_fips _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_generate_key_fips
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_generate_key_fips byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_generate_key_fips = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_generate_key_fips)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_RSA_generate_key_fips(p0 *_Ctype_struct_rsa_st, p1 _Ctype_int, p2 *_Ctype_struct_bn_gencb_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_RSA_generate_key_fips, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_get0_crt_params
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_get0_crt_params _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_get0_crt_params
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_get0_crt_params byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_get0_crt_params = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_get0_crt_params)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_RSA_get0_crt_params(p0 *_Ctype_struct_rsa_st, p1 **_Ctype_struct_bignum_st, p2 **_Ctype_struct_bignum_st, p3 **_Ctype_struct_bignum_st) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_RSA_get0_crt_params, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_get0_factors
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_get0_factors _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_get0_factors
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_get0_factors byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_get0_factors = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_get0_factors)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_RSA_get0_factors(p0 *_Ctype_struct_rsa_st, p1 **_Ctype_struct_bignum_st, p2 **_Ctype_struct_bignum_st) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_RSA_get0_factors, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_get0_key
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_get0_key _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_get0_key
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_get0_key byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_get0_key = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_get0_key)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_RSA_get0_key(p0 *_Ctype_struct_rsa_st, p1 **_Ctype_struct_bignum_st, p2 **_Ctype_struct_bignum_st, p3 **_Ctype_struct_bignum_st) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_RSA_get0_key, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_new
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_new _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_new
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_new byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_new = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_new)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_RSA_new() (r1 *_Ctype_struct_rsa_st) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_RSA_new, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_set0_crt_params
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_set0_crt_params _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_set0_crt_params
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_set0_crt_params byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_set0_crt_params = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_set0_crt_params)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_RSA_set0_crt_params(p0 *_Ctype_struct_rsa_st, p1 *_Ctype_struct_bignum_st, p2 *_Ctype_struct_bignum_st, p3 *_Ctype_struct_bignum_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_RSA_set0_crt_params, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_set0_factors
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_set0_factors _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_set0_factors
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_set0_factors byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_set0_factors = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_set0_factors)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_RSA_set0_factors(p0 *_Ctype_struct_rsa_st, p1 *_Ctype_struct_bignum_st, p2 *_Ctype_struct_bignum_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_RSA_set0_factors, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_set0_key
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_set0_key _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_set0_key
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_set0_key byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_set0_key = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_set0_key)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_RSA_set0_key(p0 *_Ctype_struct_rsa_st, p1 *_Ctype_struct_bignum_st, p2 *_Ctype_struct_bignum_st, p3 *_Ctype_struct_bignum_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_RSA_set0_key, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_sign
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_sign _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_sign
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_sign byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_sign = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_sign)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_RSA_sign(p0 _Ctype_int, p1 *_Ctype_uint8_t, p2 _Ctype_uint, p3 *_Ctype_uint8_t, p4 *_Ctype_uint, p5 *_Ctype_struct_rsa_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_RSA_sign, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_sign_pss_mgf1
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_sign_pss_mgf1 _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_sign_pss_mgf1
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_sign_pss_mgf1 byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_sign_pss_mgf1 = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_sign_pss_mgf1)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_RSA_sign_pss_mgf1(p0 *_Ctype_struct_rsa_st, p1 *_Ctype_uint, p2 *_Ctype_uint8_t, p3 _Ctype_uint, p4 *_Ctype_uint8_t, p5 _Ctype_uint, p6 *_Ctype_struct_env_md_st, p7 *_Ctype_struct_env_md_st, p8 _Ctype_int) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_RSA_sign_pss_mgf1, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
		_Cgo_use(p6)
		_Cgo_use(p7)
		_Cgo_use(p8)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_size
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_size _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_size
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_size byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_size = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_size)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_RSA_size(p0 *_Ctype_struct_rsa_st) (r1 _Ctype_uint) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_RSA_size, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_verify
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_verify _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_verify
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_verify byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_verify = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_verify)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_RSA_verify(p0 _Ctype_int, p1 *_Ctype_uint8_t, p2 _Ctype_uint, p3 *_Ctype_uint8_t, p4 _Ctype_uint, p5 *_Ctype_struct_rsa_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_RSA_verify, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_verify_pss_mgf1
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_verify_pss_mgf1 _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_verify_pss_mgf1
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_verify_pss_mgf1 byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_RSA_verify_pss_mgf1 = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_RSA_verify_pss_mgf1)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_RSA_verify_pss_mgf1(p0 *_Ctype_struct_rsa_st, p1 *_Ctype_uint8_t, p2 _Ctype_uint, p3 *_Ctype_struct_env_md_st, p4 *_Ctype_struct_env_md_st, p5 _Ctype_int, p6 *_Ctype_uint8_t, p7 _Ctype_uint) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_RSA_verify_pss_mgf1, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
		_Cgo_use(p6)
		_Cgo_use(p7)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_SHA1_Final
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA1_Final _cgo_0edd79296193_Cfunc__goboringcrypto_SHA1_Final
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA1_Final byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_SHA1_Final = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA1_Final)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_SHA1_Final(p0 *_Ctype_uint8_t, p1 *_Ctype_struct_SHAstate_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_SHA1_Final, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_SHA1_Init
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA1_Init _cgo_0edd79296193_Cfunc__goboringcrypto_SHA1_Init
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA1_Init byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_SHA1_Init = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA1_Init)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_SHA1_Init(p0 *_Ctype_struct_SHAstate_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_SHA1_Init, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_SHA1_Update
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA1_Update _cgo_0edd79296193_Cfunc__goboringcrypto_SHA1_Update
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA1_Update byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_SHA1_Update = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA1_Update)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_SHA1_Update(p0 *_Ctype_struct_SHAstate_st, p1 unsafe.Pointer, p2 _Ctype_size_t) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_SHA1_Update, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_SHA224_Final
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA224_Final _cgo_0edd79296193_Cfunc__goboringcrypto_SHA224_Final
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA224_Final byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_SHA224_Final = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA224_Final)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_SHA224_Final(p0 *_Ctype_uint8_t, p1 *_Ctype_struct_SHA256state_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_SHA224_Final, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_SHA224_Init
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA224_Init _cgo_0edd79296193_Cfunc__goboringcrypto_SHA224_Init
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA224_Init byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_SHA224_Init = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA224_Init)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_SHA224_Init(p0 *_Ctype_struct_SHA256state_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_SHA224_Init, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_SHA224_Update
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA224_Update _cgo_0edd79296193_Cfunc__goboringcrypto_SHA224_Update
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA224_Update byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_SHA224_Update = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA224_Update)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_SHA224_Update(p0 *_Ctype_struct_SHA256state_st, p1 unsafe.Pointer, p2 _Ctype_size_t) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_SHA224_Update, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_SHA256_Final
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA256_Final _cgo_0edd79296193_Cfunc__goboringcrypto_SHA256_Final
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA256_Final byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_SHA256_Final = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA256_Final)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_SHA256_Final(p0 *_Ctype_uint8_t, p1 *_Ctype_struct_SHA256state_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_SHA256_Final, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_SHA256_Init
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA256_Init _cgo_0edd79296193_Cfunc__goboringcrypto_SHA256_Init
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA256_Init byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_SHA256_Init = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA256_Init)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_SHA256_Init(p0 *_Ctype_struct_SHA256state_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_SHA256_Init, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_SHA256_Update
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA256_Update _cgo_0edd79296193_Cfunc__goboringcrypto_SHA256_Update
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA256_Update byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_SHA256_Update = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA256_Update)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_SHA256_Update(p0 *_Ctype_struct_SHA256state_st, p1 unsafe.Pointer, p2 _Ctype_size_t) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_SHA256_Update, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_SHA384_Final
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA384_Final _cgo_0edd79296193_Cfunc__goboringcrypto_SHA384_Final
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA384_Final byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_SHA384_Final = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA384_Final)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_SHA384_Final(p0 *_Ctype_uint8_t, p1 *_Ctype_struct_SHA512state_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_SHA384_Final, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_SHA384_Init
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA384_Init _cgo_0edd79296193_Cfunc__goboringcrypto_SHA384_Init
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA384_Init byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_SHA384_Init = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA384_Init)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_SHA384_Init(p0 *_Ctype_struct_SHA512state_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_SHA384_Init, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_SHA384_Update
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA384_Update _cgo_0edd79296193_Cfunc__goboringcrypto_SHA384_Update
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA384_Update byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_SHA384_Update = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA384_Update)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_SHA384_Update(p0 *_Ctype_struct_SHA512state_st, p1 unsafe.Pointer, p2 _Ctype_size_t) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_SHA384_Update, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_SHA512_Final
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA512_Final _cgo_0edd79296193_Cfunc__goboringcrypto_SHA512_Final
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA512_Final byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_SHA512_Final = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA512_Final)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_SHA512_Final(p0 *_Ctype_uint8_t, p1 *_Ctype_struct_SHA512state_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_SHA512_Final, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_SHA512_Init
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA512_Init _cgo_0edd79296193_Cfunc__goboringcrypto_SHA512_Init
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA512_Init byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_SHA512_Init = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA512_Init)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_SHA512_Init(p0 *_Ctype_struct_SHA512state_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_SHA512_Init, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_SHA512_Update
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA512_Update _cgo_0edd79296193_Cfunc__goboringcrypto_SHA512_Update
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA512_Update byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_SHA512_Update = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_SHA512_Update)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_SHA512_Update(p0 *_Ctype_struct_SHA512state_st, p1 unsafe.Pointer, p2 _Ctype_size_t) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_SHA512_Update, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_gosha1
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_gosha1 _cgo_0edd79296193_Cfunc__goboringcrypto_gosha1
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_gosha1 byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_gosha1 = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_gosha1)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_gosha1(p0 unsafe.Pointer, p1 _Ctype_size_t, p2 unsafe.Pointer) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_gosha1, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_gosha224
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_gosha224 _cgo_0edd79296193_Cfunc__goboringcrypto_gosha224
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_gosha224 byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_gosha224 = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_gosha224)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_gosha224(p0 unsafe.Pointer, p1 _Ctype_size_t, p2 unsafe.Pointer) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_gosha224, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_gosha256
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_gosha256 _cgo_0edd79296193_Cfunc__goboringcrypto_gosha256
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_gosha256 byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_gosha256 = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_gosha256)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_gosha256(p0 unsafe.Pointer, p1 _Ctype_size_t, p2 unsafe.Pointer) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_gosha256, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_gosha384
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_gosha384 _cgo_0edd79296193_Cfunc__goboringcrypto_gosha384
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_gosha384 byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_gosha384 = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_gosha384)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_gosha384(p0 unsafe.Pointer, p1 _Ctype_size_t, p2 unsafe.Pointer) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_gosha384, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_gosha512
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_gosha512 _cgo_0edd79296193_Cfunc__goboringcrypto_gosha512
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_gosha512 byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_gosha512 = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_gosha512)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_gosha512(p0 unsafe.Pointer, p1 _Ctype_size_t, p2 unsafe.Pointer) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_gosha512, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_internal_ECDSA_sign
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_internal_ECDSA_sign _cgo_0edd79296193_Cfunc__goboringcrypto_internal_ECDSA_sign
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_internal_ECDSA_sign byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_internal_ECDSA_sign = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_internal_ECDSA_sign)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_internal_ECDSA_sign(p0 _Ctype_int, p1 *_Ctype_uchar, p2 _Ctype_size_t, p3 *_Ctype_uchar, p4 *_Ctype_uint, p5 *_Ctype_struct_ec_key_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_internal_ECDSA_sign, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_internal_ECDSA_verify
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_internal_ECDSA_verify _cgo_0edd79296193_Cfunc__goboringcrypto_internal_ECDSA_verify
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_internal_ECDSA_verify byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_internal_ECDSA_verify = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_internal_ECDSA_verify)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_internal_ECDSA_verify(p0 _Ctype_int, p1 *_Ctype_uchar, p2 _Ctype_size_t, p3 *_Ctype_uchar, p4 _Ctype_uint, p5 *_Ctype_struct_ec_key_st) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_internal_ECDSA_verify, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_internal_ERR_error_string_n
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_internal_ERR_error_string_n _cgo_0edd79296193_Cfunc__goboringcrypto_internal_ERR_error_string_n
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_internal_ERR_error_string_n byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_internal_ERR_error_string_n = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_internal_ERR_error_string_n)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_internal_ERR_error_string_n(p0 _Ctype_ulong, p1 *_Ctype_uchar, p2 _Ctype_size_t) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_internal_ERR_error_string_n, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_internal_ERR_get_error_all
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_internal_ERR_get_error_all _cgo_0edd79296193_Cfunc__goboringcrypto_internal_ERR_get_error_all
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_internal_ERR_get_error_all byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_internal_ERR_get_error_all = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_internal_ERR_get_error_all)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_internal_ERR_get_error_all(p0 **_Ctype_char, p1 *_Ctype_int, p2 **_Ctype_char, p3 **_Ctype_char, p4 *_Ctype_int) (r1 _Ctype_ulong) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_internal_ERR_get_error_all, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_internal_OPENSSL_VERSION_NUMBER
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_internal_OPENSSL_VERSION_NUMBER _cgo_0edd79296193_Cfunc__goboringcrypto_internal_OPENSSL_VERSION_NUMBER
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_internal_OPENSSL_VERSION_NUMBER byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_internal_OPENSSL_VERSION_NUMBER = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_internal_OPENSSL_VERSION_NUMBER)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_internal_OPENSSL_VERSION_NUMBER() (r1 _Ctype_ulong) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_internal_OPENSSL_VERSION_NUMBER, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_restore_openssl_rand
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_restore_openssl_rand _cgo_0edd79296193_Cfunc__goboringcrypto_restore_openssl_rand
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_restore_openssl_rand byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_restore_openssl_rand = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_restore_openssl_rand)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_restore_openssl_rand() (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_restore_openssl_rand, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc__goboringcrypto_stub_openssl_rand
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_stub_openssl_rand _cgo_0edd79296193_Cfunc__goboringcrypto_stub_openssl_rand
var __cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_stub_openssl_rand byte
var _cgo_0edd79296193_Cfunc__goboringcrypto_stub_openssl_rand = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__goboringcrypto_stub_openssl_rand)

//go:cgo_unsafe_args
func _Cfunc__goboringcrypto_stub_openssl_rand() (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__goboringcrypto_stub_openssl_rand, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_0edd79296193_Cfunc_free
//go:linkname __cgofn__cgo_0edd79296193_Cfunc_free _cgo_0edd79296193_Cfunc_free
var __cgofn__cgo_0edd79296193_Cfunc_free byte
var _cgo_0edd79296193_Cfunc_free = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc_free)

//go:cgo_unsafe_args
func _Cfunc_free(p0 unsafe.Pointer) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc_free, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}

//go:cgo_import_static _cgo_0edd79296193_Cfunc__Cmalloc
//go:linkname __cgofn__cgo_0edd79296193_Cfunc__Cmalloc _cgo_0edd79296193_Cfunc__Cmalloc
var __cgofn__cgo_0edd79296193_Cfunc__Cmalloc byte
var _cgo_0edd79296193_Cfunc__Cmalloc = unsafe.Pointer(&__cgofn__cgo_0edd79296193_Cfunc__Cmalloc)

//go:linkname runtime_throw runtime.throw
func runtime_throw(string)

//go:cgo_unsafe_args
func _cgo_cmalloc(p0 uint64) (r1 unsafe.Pointer) {
	_cgo_runtime_cgocall(_cgo_0edd79296193_Cfunc__Cmalloc, uintptr(unsafe.Pointer(&p0)))
	if r1 == nil {
		runtime_throw("runtime: C malloc failed")
	}
	return
}
