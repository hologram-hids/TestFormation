// Code generated by cmd/cgo; DO NOT EDIT.

//line /usr/lib/golang/src/vendor/github.com/golang-fips/openssl-fips/openssl/rand.go:1:1
// Copyright 2017 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

//go:build linux && !android && !cmd_go_bootstrap && !msan && !no_openssl && !static
// +build linux,!android,!cmd_go_bootstrap,!msan,!no_openssl,!static

package openssl

// #include "goopenssl.h"
import _ "unsafe"
import "unsafe"

type randReader int

func (randReader) Read(b []byte) (int, error) {
	// Note: RAND_bytes should never fail; the return value exists only for historical reasons.
	// We check it even so.
	if len(b) > 0 && ( /*line :19:19*/_Cfunc__goboringcrypto_RAND_bytes /*line :19:46*/)((* /*line :19:50*/_Ctype_uint8_t /*line :19:59*/)(unsafe.Pointer(&b[0])),  /*line :19:85*/_Ctype_size_t /*line :19:93*/(len(b))) == 0 {
		return 0, NewOpenSSLError("RAND_bytes")
	}
	return len(b), nil
}

const RandReader = randReader(0)
